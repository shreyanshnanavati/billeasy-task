### Enhanced API Testing with Pagination, Retry, and Rate Limiting

### Variables
# For local development: http://localhost:3000
# For Docker setup: http://localhost:3002
@baseUrl = http://localhost:3002
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzIiwiZW1haWwiOiJ0ZXN0MkBleGFtcGxlLmNvbSIsImlhdCI6MTc0ODI3NDk2OCwiZXhwIjoxNzQ4MzYxMzY4fQ.l0_OS1z8qtgarWx_JODqSiPQr5JzenAxXxcMQSgC2C4

### 0. Health Check (No Authentication Required)
GET {{baseUrl}}/health

###

### 1. Register a new user (if needed)
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "email": "test2@example.com",
  "password": "password123"
}

###

### 2. Login to get fresh token
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "test2@example.com",
  "password": "password123"
}

###

### 3. Upload a file (rate limited - 5 per minute)
POST {{baseUrl}}/upload/file
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="title"

Test Document with Pagination
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="description"

This is a test document for pagination and retry features
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test-pagination.txt"
Content-Type: text/plain

This is a test file for pagination and retry functionality.
It contains some sample content to test the enhanced features.
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

### 4. Get files with pagination (page 1, limit 5)
GET {{baseUrl}}/upload/files?page=1&limit=5
Authorization: Bearer {{token}}

###

### 5. Get files with pagination (page 2, limit 3)
GET {{baseUrl}}/upload/files?page=2&limit=3
Authorization: Bearer {{token}}

###

### 6. Get files with default pagination (page 1, limit 10)
GET {{baseUrl}}/upload/files
Authorization: Bearer {{token}}

###

### 7. Get failed jobs for current user
GET {{baseUrl}}/upload/files/failed
Authorization: Bearer {{token}}

###

### 8. Retry a failed job (replace FILE_ID with actual failed file ID)
POST {{baseUrl}}/upload/files/1/retry
Authorization: Bearer {{token}}

###

### 9. Check specific file processing status (replace FILE_ID with actual file ID)
GET {{baseUrl}}/upload/files/4
Authorization: Bearer {{token}}

###

### 10. Get queue status with details (SYSTEM-WIDE - NOT USER-SPECIFIC)
GET {{baseUrl}}/queue/status/file-processing

###

### 11. Get MY queue status (SECURE - USER-SPECIFIC)
GET {{baseUrl}}/queue/status/my-jobs
Authorization: Bearer {{token}}

###

### 12. Get all failed jobs in queue (INSECURE - ALL USERS)
GET {{baseUrl}}/queue/failed-jobs
Authorization: Bearer {{token}}

###

### 13. Get MY failed jobs only (SECURE - USER-SPECIFIC)
GET {{baseUrl}}/queue/my-failed-jobs
Authorization: Bearer {{token}}

###

### 14. Retry a specific job by ID (INSECURE - ANY JOB)
POST {{baseUrl}}/queue/retry-job/1
Authorization: Bearer {{token}}

###

### 15. Retry MY specific job by ID (SECURE - WITH OWNERSHIP CHECK)
POST {{baseUrl}}/queue/retry-my-job/1
Authorization: Bearer {{token}}

###

### 16. Retry all failed jobs (INSECURE - ALL USERS)
POST {{baseUrl}}/queue/retry-all-failed
Authorization: Bearer {{token}}

###

### 17. Retry all MY failed jobs (SECURE - USER-SPECIFIC)
POST {{baseUrl}}/queue/retry-all-my-failed
Authorization: Bearer {{token}}

###

### 18. Test rate limiting - Upload multiple files quickly (should be limited after 5 uploads)
POST {{baseUrl}}/upload/file
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="rate-limit-test-1.txt"
Content-Type: text/plain

Rate limit test file 1
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

POST {{baseUrl}}/upload/file
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="rate-limit-test-2.txt"
Content-Type: text/plain

Rate limit test file 2
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

POST {{baseUrl}}/upload/file
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="rate-limit-test-3.txt"
Content-Type: text/plain

Rate limit test file 3
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

POST {{baseUrl}}/upload/file
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="rate-limit-test-4.txt"
Content-Type: text/plain

Rate limit test file 4
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

POST {{baseUrl}}/upload/file
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="rate-limit-test-5.txt"
Content-Type: text/plain

Rate limit test file 5
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

# This 6th upload should be rate limited (429 Too Many Requests)
POST {{baseUrl}}/upload/file
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="rate-limit-test-6-should-fail.txt"
Content-Type: text/plain

This upload should be rate limited
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

### SECURITY TESTING SECTION
### Test the difference between secure and insecure endpoints

### 19. Test user profile access (should only show current user)
GET {{baseUrl}}/auth/profile
Authorization: Bearer {{token}}

###

### 20. Create a second user to test security isolation
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "email": "user2@example.com",
  "password": "password123"
}

###

### 21. Login as second user
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "user2@example.com",
  "password": "password123"
}

# Copy the token from response above and use it in the next requests to test isolation

###

### 22. Upload file as second user (use token from step 21)
# POST {{baseUrl}}/upload/file
# Authorization: Bearer <SECOND_USER_TOKEN>
# Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
# 
# ------WebKitFormBoundary7MA4YWxkTrZu0gW
# Content-Disposition: form-data; name="file"; filename="second-user-file.txt"
# Content-Type: text/plain
# 
# This file belongs to the second user
# ------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

### 23. Test that users can only see their own files
# GET {{baseUrl}}/upload/files
# Authorization: Bearer <SECOND_USER_TOKEN>

###

### 24. Test that users can only see their own queue status
# GET {{baseUrl}}/queue/status/my-jobs
# Authorization: Bearer <SECOND_USER_TOKEN>

###

### 25. Test that users can only see their own failed jobs
# GET {{baseUrl}}/queue/my-failed-jobs
# Authorization: Bearer <SECOND_USER_TOKEN>

### 